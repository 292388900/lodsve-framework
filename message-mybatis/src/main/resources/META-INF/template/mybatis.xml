<?xml version="1.0" encoding="UTF-8"?>
<beans
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
            http://www.springframework.org/schema/aop
            http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

    <!-- MySQL start -->
    <bean th:if="${dbType == 'MySQL' }" th:id="${dataSource} + 'MysqlLobHandler'" class="org.springframework.jdbc.support.lob.DefaultLobHandler" lazy-init="true"/>

    <bean th:if="${dbType == 'MySQL' }" th:id="${dataSource} + 'SqlHelper'" class="message.mybatis.helper.MySQLSqlHelper">
        <property name="idGenerator" th:attr="ref=${dataSource} + 'MaxValueIncrementer'"/>
    </bean>

    <bean th:if="${dbType == 'MySQL' }" th:id="${dataSource} + 'MaxValueIncrementer'" class="message.mybatis.key.generic.MySQLMaxValueIncrementer">
        <property name="dataSource" th:attr="ref=${dataSource}"/>
        <property name="keyLength" value="5"/>
        <property name="cacheSize" value="5"/>
    </bean>
    <!-- MySQL end -->

    <!-- Oracle start -->
    <bean th:if="${dbType == 'Oracle' }" th:id="${dataSource} + 'JdbcExtractor'" class="org.springframework.jdbc.support.nativejdbc.CommonsDbcpNativeJdbcExtractor" lazy-init="true"/>

    <bean th:if="${dbType == 'Oracle' }" th:id="${dataSource} + 'OracleLobHandler'" class="org.springframework.jdbc.support.lob.OracleLobHandler">
        <property name="nativeJdbcExtractor" th:attr="ref=${dataSource} + 'JdbcExtractor'"/>
    </bean>

    <bean th:if="${dbType == 'Oracle' }" th:id="${dataSource} + 'SqlHelper'" class="message.mybatis.helper.OracleSqlHelper">
        <property name="lobHandler" th:attr="ref=${dataSource} + 'OracleLobHandler'"/>
        <property name="idGenerator" th:attr="ref=${dataSource} + 'MaxValueIncrementer'"/>
    </bean>

    <bean th:if="${dbType == 'Oracle' }" th:id="${dataSource} + 'MaxValueIncrementer'" class="message.mybatis.key.sequence.OracleSequenceMaxValueIncrementer">
        <property name="dataSource" th:attr="ref=${dataSource}"/>
        <property name="keyLength" value="5"/>
    </bean>
    <!-- Oracle end -->

    <!-- flyway -->
    <bean th:id="${dataSource} + 'Flyway'" class="org.flywaydb.core.Flyway" init-method="migrate" th:if="${useFlyway}">
        <property name="dataSource" th:attr="ref=${dataSource}"/>
        <property name="locations" th:attr="value=${migration}"/>
    </bean>

    <bean th:id="${dataSource}+'SqlSessionFactory'" class="org.mybatis.spring.SqlSessionFactoryBean"
          th:if="${useFlyway}" th:attr="depends-on=${dataSource} + 'Flyway'">
        <property name="dataSource" th:attr="ref=${dataSource}"/>
        <property name="mapperLocations" value="classpath*:/META-INF/mybatis/**/*Mapper.xml" />
        <property name="configLocation" value="classpath:/META-INF/mybatis/mybatis.xml"/>
        <property name="typeHandlers" th:value="'#'+'{'+'typeHandlerScanner'+'.'+'find'+'(\''+${typeHandlersLocations}+'\')'+'}'"/>
    </bean>

    <bean th:id="${dataSource}+'SqlSessionFactory'" class="org.mybatis.spring.SqlSessionFactoryBean"
          th:if="${!useFlyway}">
        <property name="dataSource" th:attr="ref=${dataSource}"/>
        <property name="mapperLocations" value="classpath*:/META-INF/mybatis/**/*Mapper.xml" />
        <property name="configLocation" value="classpath:/META-INF/mybatis/mybatis.xml"/>
        <property name="typeHandlers" th:value="'#'+'{'+'typeHandlerScanner'+'.'+'find'+'(\''+${typeHandlersLocations}+'\')'+'}'"/>
    </bean>

    <bean th:id="${dataSource}+'TransactionManager'" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" th:attr="ref=${dataSource}" />
    </bean>

    <tx:advice th:id="${dataSource}+'TxAdvice'" th:attr="transaction-manager=${dataSource}+'TransactionManager'">
        <tx:attributes>
            <tx:method name="*" propagation="REQUIRED" rollback-for="Throwable" />
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut th:id="${dataSource}+'TxMethods'" th:attr="expression='execution(* ' + ${basePackage} + '.service.*.*(..)) or '
			+ 'execution(* '+ ${basePackage} + '.dao.*.*(..))'" />
        <aop:advisor th:attr="advice-ref=${dataSource}+'TxAdvice',pointcut-ref=${dataSource}+'TxMethods'"/>
    </aop:config>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" th:value="${basePackage}+'.dao'" />
        <property name="annotationClass" value="org.springframework.stereotype.Repository" />
        <property name="sqlSessionFactoryBeanName" th:value="${dataSource}+'SqlSessionFactory'" />
    </bean>

</beans>